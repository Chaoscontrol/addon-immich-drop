name: publish-image
on:
  release:
    types: [published]
  workflow_dispatch: {}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image names and version
        id: meta
        shell: bash
        run: |
          set -euo pipefail
          OWNER="$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')"
          IMAGE_BASE="ghcr.io/${OWNER}/addon-immich-drop"
          if [[ "${GITHUB_REF_TYPE}" == "tag" && -n "${GITHUB_REF_NAME}" ]]; then
            VERSION="${GITHUB_REF_NAME}"
          else
            VERSION="latest"
          fi
          echo "owner=${OWNER}" >> "$GITHUB_OUTPUT"
          echo "image_base=${IMAGE_BASE}" >> "$GITHUB_OUTPUT"
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"

      - name: Build and push amd64
        uses: docker/build-push-action@v5
        with:
          context: .
          file: immich-drop/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ steps.meta.outputs.image_base }}-amd64:${{ steps.meta.outputs.version }}
            ${{ steps.meta.outputs.image_base }}-amd64:latest

      - name: Build and push aarch64 (arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: immich-drop/Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            ${{ steps.meta.outputs.image_base }}-aarch64:${{ steps.meta.outputs.version }}
            ${{ steps.meta.outputs.image_base }}-aarch64:latest

      - name: Build and push armv7
        uses: docker/build-push-action@v5
        with:
          context: .
          file: immich-drop/Dockerfile
          platforms: linux/arm/v7
          push: true
          tags: |
            ${{ steps.meta.outputs.image_base }}-armv7:${{ steps.meta.outputs.version }}
            ${{ steps.meta.outputs.image_base }}-armv7:latest

      - name: Create multi-arch manifest (version tag)
        shell: bash
        run: |
          set -euo pipefail
          BASE="${{ steps.meta.outputs.image_base }}"
          VER="${{ steps.meta.outputs.version }}"
          docker buildx imagetools create \
            -t "${BASE}:${VER}" \
            "${BASE}-amd64:${VER}" \
            "${BASE}-aarch64:${VER}" \
            "${BASE}-armv7:${VER}"

      - name: Create multi-arch manifest (latest)
        if: ${{ steps.meta.outputs.version != 'latest' }}
        shell: bash
        run: |
          set -euo pipefail
          BASE="${{ steps.meta.outputs.image_base }}"
          docker buildx imagetools create \
            -t "${BASE}:latest" \
            "${BASE}-amd64:latest" \
            "${BASE}-aarch64:latest" \
            "${BASE}-armv7:latest"