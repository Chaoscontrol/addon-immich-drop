name: addon-patch

on:
  workflow_dispatch:
    inputs:
      reason:
        description: Reason for add-on only patch bump (no upstream change)
        required: false
        default: "add-on maintenance"

permissions:
  contents: write

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read current version
        id: cur
        shell: bash
        run: |
          set -euo pipefail
          CUR="$(sed -n 's/^version:[[:space:]]*//p' immich-drop/config.yaml | head -n1 | tr -d '\r')"
          if [ -z "${CUR}" ]; then
            echo "Could not read version from immich-drop/config.yaml" >&2
            exit 1
          fi
          BASE="$(echo "${CUR}" | sed -E 's/-[0-9]+$//')"
          SUFFIX="$(echo "${CUR}" | sed -nE 's/.*-([0-9]+)$/\1/p')"
          if [ -z "${SUFFIX}" ]; then
            NEW="${BASE}-1"
          else
            NEXT=$((SUFFIX+1))
            NEW="${BASE}-${NEXT}"
          fi
          echo "cur=${CUR}"   >> "$GITHUB_OUTPUT"
          echo "base=${BASE}" >> "$GITHUB_OUTPUT"
          echo "new=${NEW}"   >> "$GITHUB_OUTPUT"

      - name: Apply new version and pin Dockerfile UPSTREAM_REF
        shell: bash
        env:
          NEW: ${{ steps.cur.outputs.new }}
          BASE: ${{ steps.cur.outputs.base }}
        run: |
          set -euo pipefail
          sed -i -E "s|^(version:[[:space:]]*).*$|\1${NEW}|" immich-drop/config.yaml
          # Keep Dockerfile pinned to base upstream ref (without -X)
          sed -i -E "s|^ARG UPSTREAM_REF=.*$|ARG UPSTREAM_REF=${BASE}|" immich-drop/Dockerfile

      - name: Commit and push
        shell: bash
        env:
          REASON: ${{ github.event.inputs.reason }}
          NEW: ${{ steps.cur.outputs.new }}
          BASE: ${{ steps.cur.outputs.base }}
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add immich-drop/config.yaml immich-drop/Dockerfile
          git commit -m "chore(addon): bump add-on patch version to ${NEW} (base ${BASE}) - ${REASON}"
          git push

      - name: Create tag for release
        shell: bash
        env:
          NEW: ${{ steps.cur.outputs.new }}
        run: |
          set -euo pipefail
          if git ls-remote --tags origin "refs/tags/${NEW}" | grep -q "${NEW}"; then
            echo "Tag ${NEW} already exists, skipping"
          else
            git tag -a "${NEW}" -m "Immich Drop add-on ${NEW}"
            git push origin "${NEW}"
          fi

      - name: Compose release notes
        id: rn
        shell: bash
        env:
          NEW: ${{ steps.cur.outputs.new }}
          BASE: ${{ steps.cur.outputs.base }}
          REASON: ${{ github.event.inputs.reason }}
        run: |
          set -euo pipefail
          {
            echo "Add-on patch release ${NEW} (base upstream ${BASE})"
            echo
            if [ -n "${REASON}" ]; then
              echo "Reason: ${REASON}"
              echo
            fi
            echo "See CHANGELOG for details."
          } > /tmp/release_notes.md
          echo "path=/tmp/release_notes.md" >> "$GITHUB_OUTPUT"

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.cur.outputs.new }}
          name: Immich Drop add-on ${{ steps.cur.outputs.new }}
          body_path: ${{ steps.rn.outputs.path }}
          draft: false
          prerelease: ${{ contains(steps.cur.outputs.new, 'beta') || contains(steps.cur.outputs.new, 'rc') }}